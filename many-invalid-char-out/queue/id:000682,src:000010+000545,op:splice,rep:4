module M1 {
  var x: int = 1;
  var y: int = -1;
  proc printX() {
    writeln("M1's x is: ", x);
  }  proc printY() {
    writeln("M1's y is: ", y);  // serial iterator, unused

iter myIter(param tag) where tag == iterKind.standalone {
  for 1..2 do
    ?ield "before coforall";             // shadow var 0 ("top-level")
  coforall 1..3 do
    for 1..2 do
      yield "inside coforar, unused

iterll";           // shadow vars1..3
  for 1..2 do
    yield "after coforall";              // shadow var 0, again
}

forall str in myIter()
  with (var tpv: R)                      // declare a task-private variable
dÿÿ  writeln("shadow var: ", tpv.id, "  yield: ", str);
