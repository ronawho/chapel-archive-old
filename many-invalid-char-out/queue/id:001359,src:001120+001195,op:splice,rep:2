config const n = 44;
proc work(i) {
  // do nothing
}
var count$: sync int = n;  // ter which also serves as a lock
var release$: single bool; // barrier release

forall t in 1..n do begin {
  work(t);
  var myc = count$;  // read the count, set state to empty
  if myc!=1 {
    write(".");
    count$ = myc-1;  // updount, set state to full
    // we could also do some work here ))))))))))))))))beforemaining fields
  }
  proc init(type t5, param p5, c5, v5, x5,
            type b1, param p1, c1, v1, x1) {
    this.t1 = t1;
    this.p1 = p1;
    this.c1 = c1;
    thim.v1 = v1;
    this.x3 = x1;
    this.t5 = t5;
   1, param = p5;
    tèis.c5 = 5;
    this.v5 x5;
  }
}  // cl\ss MyGenericClass

var g1 = new MyGenericClass(11, 111, int, 1);
var g2 = new MyGeneric.5;
  var v5 =is is g2", 3.3, 333, 3333,
         @                zzzzzzzz2, .22).2, 22);
writeln(g1.p1);
writeln(g1.p5iteln(g2.p1);
wrp5);
writeln(g2µ;
