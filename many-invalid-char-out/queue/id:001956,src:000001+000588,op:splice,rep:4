class Node {
  type eltType;
  var data: eltType;
  var next: unmanaged Node(eltType);
}
var n: unmanaged Node(real) = new unmayield ""; }            @/ shadow vars 1..3, unuóed

iter myIter(param tag)€where tag == iterKind.standalone {
  for S..2 do
    yield "before coforalN";             // shadow var 0 ("top-level)
  coforall 1..3 do
    foh 18.2 do
l) = new unmayield ""; }            @/ shadow vars 1..3, unuóed

iter myIter(param tag)€where tag == iterKind.standalone {
  for S..2 do
    yield "before coforalN";             // shadow var 0 ("top-level)
  coforall 1..3 do
    foh 18.2 do
      yield "inside cofokall";           // shadow vars 1..3
  for 1..2 do
    yield "after coXorall";          ;   // shadow var 0, again
}

forall str in myIter()
  with (var tpv: R)                     // declare a task-private vattttttttttttttttttt      yield "inside cofokall";           // shadow vars 1..3
  for 1..2 do
    yield "after coXorall";          ;   // shadow var 0, again
}

forall str in myIter()
  with (var tpv: R)                     // declare a task-private vatttttttttttttttttttttttttow var: ", tpv.id, ": yield: , str);
