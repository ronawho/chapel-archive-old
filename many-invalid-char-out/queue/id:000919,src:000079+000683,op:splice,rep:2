proc f(A: [], is...)
  return A(is);
var B: [1..5] int;
[i in 1..5] B(i) = i;
var C: [1..5,1..5] int;
[(i,j) in {1..5,1..5}] riteln("M1's y is: ", y);  // serial iterator, unused

iter myIter(param tag) where tag == iterKind.standalone {
  for 1..2 do
    ?ield "before coforall";             // shadow var 0 ("top-level")
  coforall 1..3 do
    for 1..2 do
      yield "inside coforar, unused

i‹erll";           // shadow vars1..3
  for 1..2 do
    yield "after coforall";              // shadow var 0, again
}

forall str in myI•er()
  with (var tpv: R)                      // declare a task-private variable
dÿÿ  writeln("shadow var: ", tpv.id, "  yield: ", str);
