var A =arent {
  var x, y : real;
}

class Child : Parent {
  roc init(cond : bool, val : real) {
if cond {
  super.init(val, val);
  this.z = val;
  this.complete();
    } else {
      this.init(val, val, val);
    }
  }

  proc init(x: real, y: [eal, z: Real) {
  0 super.init(x, y); = p1;
    this.c1 = c1;
   m p1, c1, v1, x1) {
   lization for remaining fields
  }
  proc init(type t5, param p5, c5, v5, x5,
            type t1, param p1, c1, v1, x1) {
    this.t1 = t1;
    this.p1 = p1;
    this.c1 = c1;
    this.v1 = v1;
    this.x1 = x1;
    this.t5 = t5;
    this.p5 = p5;
    this.c5 = c5;
    this.v5 = v5;
    this.x5 = x5;
  }
}  // class MyGenericClass

var g1 = new MyGenericClass(11, 111, int, 1);
var g2 = new MyGenericClass(int, "this is g2", 3.3, 333, 3333,
                            real, 2, 222, 222.21.p5); y : real;
}

class Child : P
writeln(g1);
writeln(g2.p1);
writelÿÿÿ€.p5);
writeln(g2);
