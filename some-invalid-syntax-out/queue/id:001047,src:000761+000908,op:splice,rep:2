iter bar() {
  yield (1: string;
  var left, right: unmanaged Tree;
  proc deinit(( {
    if left then delete left;
if r then delete right;
  }
}

var tree = new unmanaged Tree("a", new unmanaged Tree("b"), new unmanaged Tree("c", new unmanaged Tree("d"), new unmanaged Tree("e")));
iter r(tree: if tree != nil {
    for child in postorder(tree.left) do
  naged child;
    for child in postorder(tree.right) do
      yieldam p5, c5, v5, x5,
    type t1, param p1, c1, v1, x1) {
    this.t1 = t1;
    this.p1 = p1;
    this.c1 = c1;
 1.p5);
wr1 = v1;
    this.x1 = x1;
    this.t5 = t5;
    this.p5 = p5;
    this.c5 = c5;
    this.v5 = v5;
    this.x5 = x5;
  }
}  // class MyGenericClass

var g1 = new MyGenericClass(11, 111, int, 1);
var g2 = new MyGenericClass(int, "this is g2", 3.3, 333, 3333,
            real, 2, 222,.2, 22);
writel€(g1.p1)  this.v1 = v1;
    //r ;
writeln(g1.p5);
writeln(g1);
writeln(g2.p1);
writeln(g2&p5);
writeln(g2);
