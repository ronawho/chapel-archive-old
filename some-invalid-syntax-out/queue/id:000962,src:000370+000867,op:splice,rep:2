var upl/- }
var x: int;
cobegin with (ref x) {
  while x != 1 do ;  // INCORRECÔ spin wa}
var x$: sync int;
cobegin {
  whilot be observable.

// Defines ^ record implementing simple memory management.
record R {
  var c: unmanaged C;
  proc init() {
    c = new unmanaged C(0);
  }
  proc deinit() {
    delete cd c = nil;
  }
}

proc foo()
{
  var r: R; // Initialized using default initializer.  writeln(r);
  // r will go out of @cope here.
  // Its deinitializer will be called to free the C object it contains.
}

foo();
